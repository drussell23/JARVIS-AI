# Pre-commit hooks for JARVIS
# Install: pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 24.10.0
    hooks:
      - id: black
        language_version: python3.10
        args: ['--line-length=100']
        stages: [pre-commit]

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ['--profile', 'black', '--line-length', '100']
        stages: [pre-commit]

  # Linting
  - repo: https://github.com/pycqa/flake8
    rev: 7.1.1
    hooks:
      - id: flake8
        args:
          - '--max-line-length=100'
          - '--extend-ignore=E203,E266,E501,W503,E722,F541,E402,F401,F811,F821,F841'
          - '--max-complexity=200'
        exclude: ^(migrations/|__pycache__|.pyc|.pyo|.git)

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.0
    hooks:
      - id: bandit
        args: ['-c', 'pyproject.toml']
        additional_dependencies: ['bandit[toml]']
        exclude: ^tests/

  # Type checking (disabled for now - too many legacy issues)
  # - repo: https://github.com/pre-commit/mirrors-mypy
  #   rev: v1.14.1
  #   hooks:
  #     - id: mypy
  #       additional_dependencies:
  #         - types-PyYAML
  #         - types-requests
  #       args:
  #         - '--ignore-missing-imports'
  #         - '--allow-untyped-defs'
  #         - '--no-strict-optional'
  #         - '--allow-untyped-calls'
  #         - '--allow-incomplete-defs'
  #       exclude: ^(tests/|migrations/|backend/voice_unlock/|backend/vision/|backend/process_cleanup_manager.py|backend/resource_manager.py)

  # YAML validation
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: end-of-file-fixer
        exclude: '\.md$'  # Skip markdown files
      - id: trailing-whitespace
        exclude: '\.md$'  # Skip markdown files
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: detect-private-key
      - id: mixed-line-ending

  # Docstring coverage
  - repo: https://github.com/econchick/interrogate
    rev: 1.7.0
    hooks:
      - id: interrogate
        args: ['-v', '--fail-under=50', '--ignore-init-module']
        exclude: ^(tests/|migrations/)

  # Remove unused imports and variables
  - repo: https://github.com/PyCQA/autoflake
    rev: v2.3.1
    hooks:
      - id: autoflake
        args:
          - '--in-place'
          - '--remove-all-unused-imports'
          - '--remove-unused-variables'
          - '--remove-duplicate-keys'
          - '--ignore-init-module-imports'
        stages: [pre-commit]

  # Auto-generate GCP startup script from start_system.py
  - repo: local
    hooks:
      - id: generate-gcp-startup
        name: Generate GCP startup script
        entry: python3 scripts/generate_startup_script.py
        language: system
        pass_filenames: false
        files: ^start_system\.py$
        always_run: false

  # Block duplicate files (macOS creates "file 2.py" when copying)
  - repo: local
    hooks:
      - id: block-duplicate-files
        name: Block duplicate files with " 2" suffix
        entry: bash -c 'if git diff --cached --name-only --diff-filter=A | grep -E " 2\.(py|json|yaml|yml|txt|sh)$"; then echo "Error Attempting to commit duplicate files with 2 suffix. Please rename or delete these files."; exit 1; fi'
        language: system
        pass_filenames: false
        always_run: true
